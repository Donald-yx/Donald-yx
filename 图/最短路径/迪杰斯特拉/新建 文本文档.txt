迪杰斯特拉算法，和普利姆算法有些相似，段仍有改动


首先定义一个集合S，初始化其中放一个节点，然后还有一个集合T是存放所有节点的集合
再创建一个列表，第一列为从其实结点开始到达的重点的节点的名称，第二行中的i是指执行的次数
倒数第二行放入的是该列+这个条件可以达到下一列的效果
最后一行距离最短的权值


第一步从第一个结点开始寻找从该节点可以直达各个点的权值并记录到该表当中//注意是直达中间如果存在其他节点说明该节点无法从
当前位置到达那个节点，所以权值就为无穷大


第二部，从当前这列中找出这两个节点之间权值最小的点，然后将它加入到S中，并从T中删除该节点

第三步：在有了这个节点的情况下，如果存在一个该情况为条件可以使得全职更小的路径则将该路径的权值记录到表当中；
如果加入这个点后权值不会发生任何变化则无需变动，比方说一想要到三就必须有二这个条件才能到达三，否则到达的程度为无穷大
找到之后将最新的节点记录到S中从T中删除，

值得注意的是每次加入新节点以后，寻找最终的节点必须为T中的节点

第四步最终结果为S=V（全部节点）
